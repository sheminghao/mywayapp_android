package com.mywaytec.myway;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mywaytec.myway.model.db.ConnectedBleInfo;
import com.mywaytec.myway.model.db.FingerWarkInfo;
import com.mywaytec.myway.model.db.MyTrack;
import com.mywaytec.myway.model.db.Track;

import com.mywaytec.myway.ConnectedBleInfoDao;
import com.mywaytec.myway.FingerWarkInfoDao;
import com.mywaytec.myway.MyTrackDao;
import com.mywaytec.myway.TrackDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig connectedBleInfoDaoConfig;
    private final DaoConfig fingerWarkInfoDaoConfig;
    private final DaoConfig myTrackDaoConfig;
    private final DaoConfig trackDaoConfig;

    private final ConnectedBleInfoDao connectedBleInfoDao;
    private final FingerWarkInfoDao fingerWarkInfoDao;
    private final MyTrackDao myTrackDao;
    private final TrackDao trackDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        connectedBleInfoDaoConfig = daoConfigMap.get(ConnectedBleInfoDao.class).clone();
        connectedBleInfoDaoConfig.initIdentityScope(type);

        fingerWarkInfoDaoConfig = daoConfigMap.get(FingerWarkInfoDao.class).clone();
        fingerWarkInfoDaoConfig.initIdentityScope(type);

        myTrackDaoConfig = daoConfigMap.get(MyTrackDao.class).clone();
        myTrackDaoConfig.initIdentityScope(type);

        trackDaoConfig = daoConfigMap.get(TrackDao.class).clone();
        trackDaoConfig.initIdentityScope(type);

        connectedBleInfoDao = new ConnectedBleInfoDao(connectedBleInfoDaoConfig, this);
        fingerWarkInfoDao = new FingerWarkInfoDao(fingerWarkInfoDaoConfig, this);
        myTrackDao = new MyTrackDao(myTrackDaoConfig, this);
        trackDao = new TrackDao(trackDaoConfig, this);

        registerDao(ConnectedBleInfo.class, connectedBleInfoDao);
        registerDao(FingerWarkInfo.class, fingerWarkInfoDao);
        registerDao(MyTrack.class, myTrackDao);
        registerDao(Track.class, trackDao);
    }
    
    public void clear() {
        connectedBleInfoDaoConfig.clearIdentityScope();
        fingerWarkInfoDaoConfig.clearIdentityScope();
        myTrackDaoConfig.clearIdentityScope();
        trackDaoConfig.clearIdentityScope();
    }

    public ConnectedBleInfoDao getConnectedBleInfoDao() {
        return connectedBleInfoDao;
    }

    public FingerWarkInfoDao getFingerWarkInfoDao() {
        return fingerWarkInfoDao;
    }

    public MyTrackDao getMyTrackDao() {
        return myTrackDao;
    }

    public TrackDao getTrackDao() {
        return trackDao;
    }

}
